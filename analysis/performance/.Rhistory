geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.01, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
print(g[1])
length(unique(df$pair))
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
colors
g[[p]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.01, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
print(g[1])
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.001, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.2) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
p
c=1
c+2(p-1)
c+2*(p-1)
c+2*(2-1)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) && (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[c+2*(p-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
multiplot(plotlist=g,cols=2)
g
g[1]
g[2]
g[1]
data$condition
c
(data$condition==c)
(data$piece==p)
(data$piece==p) && (data$condition==c)
(data$piece==p) & (data$condition==c)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[c+2*(p-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
multiplot(plotlist=g,cols=2)
g[4]
p
c
ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=as.factor(pair)), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=as.factor(pair)), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
g[1]
g[2]
g[3]
g[4]
multiplot(plotlist=g,cols=2)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_se, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")     #print(g)
}
}
multiplot(plotlist=g,cols=2)
library(lme4)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + piece + (1|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial+condition + piece + (1|pair),data=data,REML=0)
m04=lmer(gc ~ 1 + trial*condition + piece + (1|pair),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition*piece + (1|pair),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05)
summary(m02)
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
multiplot(plotlist=g,cols=2)
data$pair_pp1<-c(1,1,1,2,2,3,4,4,4,3,3,2)
data$pair_pp2<-c(2,3,4,3,4,4,3,2,1,3,2,1)
data$pair_pp1
m00=lmer(gc ~ 1 + (1|pair1) + (1|pair2),data=data,REML=0)
m00=lmer(gc ~ 1 + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m03=lmer(gc ~ 1 + trial+condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m04=lmer(gc ~ 1 + trial*condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition*piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05)
summary(m02)
VarCorr(m02)
ranef(m02)
ranef(m02)$pair_pp1
ranef(m02)$pair_pp2
m02=lmer(gc ~ 1 + trial + (1+trial|pair_pp1) + (1+trial|pair_pp2),data=data,REML=0)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + (1+trial+condition|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + (1+trial+piece|pair),data=data,REML=0)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + piece + (1+trial|pair),data=data,REML=0)
m04=lmer(gc ~ 1 + trial+condition + piece + (1+trial|pair),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition + piece + (1+trial|pair),data=data,REML=0)
m06=lmer(gc ~ 1 + trial*condition*piece + (1+trial|pair),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05,m06)
summary(m03)
ranef(m03)$pair
ranef(m03)$pair[[1]]
ranef(m03)$pair[[2]]
qqplot(ranef(m03)$pair[[1]])
qqplot(ranef(m03)$pair[1])
qqplot(ranef(m03)$pair[[1]])
ranef(m03)$pair
?m03
? m03
? lmer
summary(m03)
library(lmerTest)
summary(m03)
anova(m03)
summary(m03)
fitted(m03)
data$gc-fitted(m03)
qqplot(data$gc-fitted(m03))
? qqplot
qqplot(data$gc-fitted(m03))
data$gc-fitted(m03)
as.vector(data$gc-fitted(m03))
qqplot(as.vector(data$gc-fitted(m03)))
qqnorm(as.vector(data$gc-fitted(m03)))
qqnorm(data$gc-fitted(m03))
plot(as.vector(data$gc-fitted(m03)))
data$fitted <- fitted(m03)
data$fit_wout_ran <- getME(m03,'X') %*% fixef(m03)
plot(data$fitted)
lines(data$fit_wout_ran,type='p')
lines(data$fit_wout_ran,type='p',col='r')
lines(data$fit_wout_ran,type='p',col='red')
plot(data$fit_wout_ran,type='p',col='black')
lines(data$fit_wout_ran,type='p',col='red')
plot(data$fitted,type='p',col='black')
plot(data$gc,type='p',col='black')
lines(data$fitted,type='p',col='blue')
lines(data$fit_wout_ran,type='p',col='red')
plot(data$pair,data$gc,type='p',col='black')
lines(data$pair,data$fitted,type='p',col='blue')
lines(data$pair,data$fit_wout_ran,type='p',col='red')
plot(data$trial,data$gc,type='p',col='black')
lines(data$trial,data$fitted,type='p',col='blue')
lines(data$trial,data$fit_wout_ran,type='p',col='red')
plot(data$gc,type='p',col='black')
lines(data$fitted,type='p',col='blue')
lines(data$fit_wout_ran,type='p',col='red')
m00=lmer(gc ~ 1 + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair_pp1) + (1+trial|pair_pp2),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m03=lmer(gc ~ 1 + trial+condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m04=lmer(gc ~ 1 + trial*condition + piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition*piece + (1|pair_pp1) + (1|pair_pp2),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05)
summary(m02)
m00=lmer(gc ~ 1 + (1|pair),data=data,REML=0)
m01=lmer(gc ~ 1 + trial + (1|pair),data=data,REML=0)
m02=lmer(gc ~ 1 + trial + (1+trial|pair),data=data,REML=0)
m03=lmer(gc ~ 1 + trial + piece + (1+trial|pair),data=data,REML=0)
m04=lmer(gc ~ 1 + trial+condition + piece + (1+trial|pair),data=data,REML=0)
m05=lmer(gc ~ 1 + trial*condition + piece + (1+trial|pair),data=data,REML=0)
m06=lmer(gc ~ 1 + trial*condition*piece + (1+trial|pair),data=data,REML=0)
anova(m00,m01,m02,m03,m04,m05,m06)
summary(m03)
anova(m03)
ranef(m03)$pair[[1]]
ranef(m03)$pair[[2]]
qqnorm(data$gc-fitted(m03))
plot(as.vector(data$gc-fitted(m03)))
plot(data$gc,type='p',col='black')
lines(fitted(m03),type='p',col='blue')
lines(getME(m03,'X') %*% fixef(m03),type='p',col='red')
data<-read.csv(file="http://dotov.synology.me/wordpress/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://github.com/dobri/livelab/blob/master/madawaska_4tet2/movement_analysis/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://github.com/dobri/livelab/madawaska_4tet2/movement_analysis/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://mcmasteru365-my.sharepoint.com/:x:/g/personal/dotovd_mcmaster_ca/EetvhFBUk9JMi9J1aNqd6FoBrtI04MaFR_f8WAQfl4Wrjw?e=xeMNCT",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/blob/master/mada_gc3.csv",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/raw/master/mada_gc3.csv?inline=false",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/raw/master/mada_gc3.csv",header=TRUE)
summary(data)
data<-read.csv(file="https://raw.githubusercontent.com/dobri/livelab/master/README.md?token=AADCLUWT64EXHDE2DQSGPYS7DB3HW",header=TRUE)
data<-read.csv(file="https://raw.githubusercontent.com/dobri/livelab/master/madawaska_4tet2/movement_analysis/mada_gc3.csv?token=AADCLUUE563OFKNZXPUS5SK7DB3RQ",header=TRUE)
summary(data)
data<-read.csv(file="http://dotov.synology.me/wordpress/mada_gc3.csv",header=TRUE)
data$pair<-factor(data$pair)
data$condition<-factor(data$condition)
data$piece<-factor(data$piece)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
#colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
#scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
#print(g)
}
}
library(ggplot2)
library(lme4)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
#colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
#scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
#print(g)
}
}
print(g[1])
install.packages("lmerTest")
library(TSA) #  This provides the pre-whiten function, and one form of simple access to the fitted model series.
library(tseries) #  provides the kpss.test of stationarity
library(forecast)
library(scales)
?prewhiten
install.packages("ghibli")
library(ghibli)
par(mfrow=c(7,3))
for(i in names(ghibli_palettes)) print(ghibli_palette(i))
colors <- ghibli_palette("MarnieMedium2",4,type=("continuous"))
colors
ghibli_palette("MarnieMedium2",4,type=("continuous"))
par
par()
par(mfrow=c(1,1))
ghibli_palette("MarnieMedium2",4,type=("continuous"))
ghibli_palette("MarnieMedium2",40,type=("continuous"))
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"));colors[1:10]
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"));print(colors[1:10])
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))[1:10];colors
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))[1:10]
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))
colors<-ghibli_palette("MarnieMedium2",10,type=("continuous"))
ghibli_palette("MarnieMedium2",10,type=("continuous"))
ghibli_palette("LaputaMedium2",10,type=("continuous"))
ghibli_palette("LaputaMedium",10,type=("continuous"))
ghibli_palette("KikiLight",10,type=("continuous"))
ghibli_palette("KikiLight",40,type=("continuous"))
ghibli_palette("KikiLight",20,type=("continuous"))
ghibli_palette("KikiLight",40,type=("continuous"))
ghibli_palette("KikiDark",40,type=("continuous"))
ghibli_palette("KikiMedium",40,type=("continuous"))
ghibli_palette("PonyoMedium",40,type=("continuous"))
ghibli_palette("PonyoLight",40,type=("continuous"))
ghibli_palette("PonyoLight",30,type=("continuous"))
ghibli_palette("PonyoLight",30,type=("discrete"))
ghibli_palette("PonyoLight",30)
ghibli_palette("PonyoLight")
ghibli_palette("PonyoLight",30,type=("discrete"))
ghibli_palette("PonyoLight",30,type=("continuous"))
ghibli_palette("PonyoLight")
ghibli_palette("PonyoLight",60,type=("continuous"))
setwd('~/logos/c3/umcg_hidden_dynamics/extract_measures_notes/')
x<-read.csv('all_scores.csv')
summary(x)
trial_counter = 0
ind1 <- regexpr('_pp',as.character(x$raw.data.file[1]))
ind2 <- regexpr('_d',as.character(x$raw.data.file[1]))
pp0 <- as.numeric(substr(as.character(x$raw.data.file[1]),ind1[1]+3,ind2[1]-1))
for (n in seq(1,dim(x)[1])) {
ind1 <- regexpr('_pp',as.character(x$raw.data.file[n]))
ind2 <- regexpr('_d',as.character(x$raw.data.file[n]))
pp <- as.numeric(substr(as.character(x$raw.data.file[n]),ind1[1]+3,ind2[1]-1))
if (pp!=pp0) {trial_counter = 1; pp0=pp} else {trial_counter = trial_counter + 1}
x$trial[n] <- trial_counter
x$pp[n] <- pp
ind<-regexpr('task',as.character(x$raw.data.file[n]))
x$task_num[n] <- as.numeric(substr(as.character(x$raw.data.file[n]),ind[1]+4,ind[1]+6))
if (x$task_num[n]==25) x$task[n]='coupled_unstable'
if (x$task_num[n]==30) x$task[n]='uncoupl_unstable'
if (x$task_num[n]==10) x$task[n]='uncoupl_periodic'
x$trial_id[n] <- as.numeric(substr(as.character(x$raw.data.file[n]),ind[1]-7,ind[1]-2))
ind<-regexpr('aud',as.character(x$raw.data.file[n]))
x$aud[n] <- as.numeric(substr(as.character(x$raw.data.file[n]),ind[1]+3,ind[1]+3))
ind<-regexpr('vis',as.character(x$raw.data.file[n]))
x$vis[n] <- as.numeric(substr(as.character(x$raw.data.file[n]),ind[1]+3,ind[1]+3))
ind<-regexpr('eps',as.character(x$raw.data.file[n]))
x$eps[n] <- as.numeric(substr(as.character(x$raw.data.file[n]),ind[1]+3,ind[1]+5))
ind<-regexpr('_d',as.character(x$raw.data.file[n]))
x$dn[n] <- as.numeric(substr(as.character(x$raw.data.file[n]),ind[1]+2,ind[1]+2))
}
x$pp <- factor(x$pp)
library(lme4)
library(texreg)
dv=2
x$dv<-x[,dv]
if (names(x)[dv]=='score') {dv_lab = 'Sync & Match Score [C/RMSE]'}
if (names(x)[dv]=='cmax') {dv_lab = 'C'}
if (names(x)[dv]=='tau') {dv_lab = 'τ'}
if (names(x)[dv]=='rmse') {dv_lab = 'RMSE'}
m1=lmer(dv ~ 1 + (-1+trial|pp),data=x,REML=0)
m1
summary(m1)
m1=lmer(dv ~ 1 + (-1+trial|pp),data=x,REML=0)
m2=lmer(dv ~ 1 + trial + (-1+trial|pp),data=x,REML=0)
m3=lmer(dv ~ 1 + trial+task + (-1+trial|pp),data=x,REML=0)
m4=lmer(dv ~ 1 + trial*task + (-1+trial|pp),data=x,REML=0)
print(dv_lab)
print(dv_lab)
print(dv_lab)
print(anova(m1,m2,m3,m4))
print(summary(m3))
m5=lmer(dv ~ 1 + trial*task + (1+trial|pp),data=x,REML=0)
m5=lmer(dv ~ 1 + trial*task + (1|pp) + (trial|pp),data=x,REML=0)
m5a=lmer(dv ~ 1 + trial*task + (1 + trial|pp),data=x,REML=0)
for (dv in c(2,3,4,5)){
x$dv<-x[,dv]
if (names(x)[dv]=='score') {dv_lab = 'Sync & Match Score [C/RMSE]'}
if (names(x)[dv]=='cmax') {dv_lab = 'C'}
if (names(x)[dv]=='tau') {dv_lab = 'τ'}
if (names(x)[dv]=='rmse') {dv_lab = 'RMSE'}
m1=lmer(dv ~ 1 + (-1+trial|pp),data=x,REML=0)
m2=lmer(dv ~ 1 + trial + (-1+trial|pp),data=x,REML=0)
m3=lmer(dv ~ 1 + trial+task + (-1+trial|pp),data=x,REML=0)
m4=lmer(dv ~ 1 + trial*task + (-1+trial|pp),data=x,REML=0)
# These don't seem to work.
m5a=lmer(dv ~ 1 + trial*task + (1 + trial|pp),data=x,REML=0)
m5b=lmer(dv ~ 1 + trial*task + (1|pp) + (trial|pp),data=x,REML=0)
sink(paste("diary_lmems_trial_task_",'_',Sys.Date(),sep=''),append=TRUE)
print(dv_lab)
print(dv_lab)
print(dv_lab)
print(anova(m1,m2,m3,m4))
print(summary(m1))
print(summary(m2))
print(summary(m3))
print(summary(m4))
print(screenreg(list(m1,m2,m3,m4)))
sink()
htmlreg(list(m1,m2,m3,m4), file = paste("texreg_lmems_",names(x)[dv],'_',Sys.Date(),'.doc',sep=''), single.row = FALSE, digits=3, inline.css=FALSE, doctype=TRUE, html.tag=TRUE, head.tag=TRUE, body.tag=TRUE)
}
source('~/logos/c3/umcg_hidden_dynamics/extract_measures_notes/multiplot.R')
library(ggplot2)
library(ghibli)
colors<-ghibli_palette("PonyoMedium",7,type=("continuous"))[c(3,5,6)]
# colors[1]<-ghibli_palette("MarnieDark2",7,type=("continuous"))[6]
# colors[2]<-ghibli_palette("MononokeDark",7,type=("continuous"))[5]
# colors[3]<-ghibli_palette("YesterdayDark",7,type=("continuous"))[6]
# Autumn color palette!
colors[1]<-ghibli_palette("MarnieMedium2",7,type=("continuous"))[6]
colors[2]<-ghibli_palette("MononokeMedium",7,type=("continuous"))[5]
colors[3]<-ghibli_palette("YesterdayMedium",7,type=("continuous"))[6]
g<-list('vector',4)
counter = 0
for (dv in c(2,3,5,4)){
x$dv<-x[,dv]
if (names(x)[dv]=='score') {dv_lab = 'Sync & Match Score [C/RMSE]'}
if (names(x)[dv]=='cmax') {dv_lab = 'C'}
if (names(x)[dv]=='tau') {dv_lab = 'τ'}
if (names(x)[dv]=='rmse') {dv_lab = 'RMSE'}
m1=lmer(dv ~ 1 + (-1+trial|pp),data=x,REML=0)
m2=lmer(dv ~ 1 + trial + (-1+trial|pp),data=x,REML=0)
m3=lmer(dv ~ 1 + trial+task + (-1+trial|pp),data=x,REML=0)
m4=lmer(dv ~ 1 + trial*task + (-1+trial|pp),data=x,REML=0)
# if (dv==2) {x$fitted <- getME(m4,'X') %*% fixef(m4)}
# if (dv==3) {x$fitted <- getME(m4,'X') %*% fixef(m4)}
# if (dv==4) {x$fitted <- getME(m3,'X') %*% fixef(m3)}
# if (dv==5) {x$fitted <- getME(m2,'X') %*% fixef(m2)}
if (dv==2) {x$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==3) {x$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==4) {x$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==5) {x$fitted <- getME(m3,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=x, aes(x=trial, y=dv, colour=as.factor(task))) +
geom_jitter(size=1, alpha=.5, width=.5, height=.1) +
geom_line(aes(x=trial, y=fitted, colour=task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000",size = 1, linetype = "solid")) +
theme(legend.position="top",legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
filename=paste("perf_scores_training_with_lin_model",'_',Sys.Date(),'.png',sep='')
png(filename=filename,width=16,height=6,units="in",res=300)
multiplot(plotlist=g,cols=4)
dev.off()
