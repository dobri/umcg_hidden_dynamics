ranef(m03)$pair[[2]]
qqnorm(data$gc-fitted(m03))
plot(as.vector(data$gc-fitted(m03)))
plot(data$gc,type='p',col='black')
lines(fitted(m03),type='p',col='blue')
lines(getME(m03,'X') %*% fixef(m03),type='p',col='red')
data<-read.csv(file="http://dotov.synology.me/wordpress/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://github.com/dobri/livelab/blob/master/madawaska_4tet2/movement_analysis/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://github.com/dobri/livelab/madawaska_4tet2/movement_analysis/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://mcmasteru365-my.sharepoint.com/:x:/g/personal/dotovd_mcmaster_ca/EetvhFBUk9JMi9J1aNqd6FoBrtI04MaFR_f8WAQfl4Wrjw?e=xeMNCT",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/blob/master/mada_gc3.csv",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/mada_gc3.csv",header=TRUE)
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/raw/master/mada_gc3.csv?inline=false",header=TRUE)
data
data<-read.csv(file="https://gitlab.com/dodo_bird/temp/-/raw/master/mada_gc3.csv",header=TRUE)
summary(data)
data<-read.csv(file="https://raw.githubusercontent.com/dobri/livelab/master/README.md?token=AADCLUWT64EXHDE2DQSGPYS7DB3HW",header=TRUE)
data<-read.csv(file="https://raw.githubusercontent.com/dobri/livelab/master/madawaska_4tet2/movement_analysis/mada_gc3.csv?token=AADCLUUE563OFKNZXPUS5SK7DB3RQ",header=TRUE)
summary(data)
data<-read.csv(file="http://dotov.synology.me/wordpress/mada_gc3.csv",header=TRUE)
data$pair<-factor(data$pair)
data$condition<-factor(data$condition)
data$piece<-factor(data$piece)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
#colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
#scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
#print(g)
}
}
library(ggplot2)
library(lme4)
g <- vector("list",4)
for (p in seq(1,2)) {
for (c in seq(1,2)) {
df<-data[(data$piece==p) & (data$condition==c),]
#colors<-wes_palette("FantasticFox1",length(unique(df$pair)),type=("continuous"))
g[[p+2*(c-1)]] <- ggplot(df) +
geom_jitter(aes(x=trial, y=gc, colour=pair), size=2, alpha=.8, height=.00, width=.0) +
geom_line(aes(x=trial, y=gc, colour=pair), size=1.2, alpha=.5) +
#scale_colour_manual(values=colors) +
theme(legend.position="top",legend.title=element_blank()) +
stat_summary(aes(x=trial,y=gc), fun='mean', geom='line', size=1.2, alpha=.7) +
stat_summary(aes(x=trial,y=gc), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
labs(y = 'mvGC') +
labs(x = "Lag")
#print(g)
}
}
print(g[1])
install.packages("lmerTest")
library(TSA) #  This provides the pre-whiten function, and one form of simple access to the fitted model series.
library(tseries) #  provides the kpss.test of stationarity
library(forecast)
library(scales)
?prewhiten
install.packages("ghibli")
library(ghibli)
par(mfrow=c(7,3))
for(i in names(ghibli_palettes)) print(ghibli_palette(i))
colors <- ghibli_palette("MarnieMedium2",4,type=("continuous"))
colors
ghibli_palette("MarnieMedium2",4,type=("continuous"))
par
par()
par(mfrow=c(1,1))
ghibli_palette("MarnieMedium2",4,type=("continuous"))
ghibli_palette("MarnieMedium2",40,type=("continuous"))
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"));colors[1:10]
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"));print(colors[1:10])
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))[1:10];colors
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))[1:10]
colors<-ghibli_palette("MarnieMedium2",40,type=("continuous"))
colors<-ghibli_palette("MarnieMedium2",10,type=("continuous"))
ghibli_palette("MarnieMedium2",10,type=("continuous"))
ghibli_palette("LaputaMedium2",10,type=("continuous"))
ghibli_palette("LaputaMedium",10,type=("continuous"))
ghibli_palette("KikiLight",10,type=("continuous"))
ghibli_palette("KikiLight",40,type=("continuous"))
ghibli_palette("KikiLight",20,type=("continuous"))
ghibli_palette("KikiLight",40,type=("continuous"))
ghibli_palette("KikiDark",40,type=("continuous"))
ghibli_palette("KikiMedium",40,type=("continuous"))
ghibli_palette("PonyoMedium",40,type=("continuous"))
ghibli_palette("PonyoLight",40,type=("continuous"))
ghibli_palette("PonyoLight",30,type=("continuous"))
ghibli_palette("PonyoLight",30,type=("discrete"))
ghibli_palette("PonyoLight",30)
ghibli_palette("PonyoLight")
ghibli_palette("PonyoLight",30,type=("discrete"))
ghibli_palette("PonyoLight",30,type=("continuous"))
ghibli_palette("PonyoLight")
ghibli_palette("PonyoLight",60,type=("continuous"))
ccf
?ccf
library(TSA) #  This provides the pre-whiten function, and one form of simple access to the fitted model series.
?ccf
?acf
?prewhiten
library(igraph)
cite('igraph')
cite(igraph)
cite('igraph')
?igraph
library(wesanderson)
wes_palette("Darjeeling1",3,type=("continuous"))
wes_palette("Darjeeling1",4,type=("continuous"))
wes_palette("Darjeeling1",7,type=("continuous"))
wes_palette("Darjeeling1",70,type=("continuous"))
wes_palette("Darjeeling1")
wes_palette("Darjeeling2",70,type=("continuous"))
wes_palette("Darjeeling3",70,type=("continuous"))
wes_palette("Darjeeling1",70,type=("continuous"))
wes_palette("Darjeeling1",170,type=("continuous"))
wes_palette("Darjeeling1",100,type=("continuous"))
wes_palette("Darjeeling1",20,type=("continuous"))
wes_palette("Darjeeling1",2,type=("continuous"))
library(lme4)
library(texreg)
library(lattice)
setwd('/home/dobri/logos/c3/umcg_hidden_dynamics/analysis')
X<-read.csv('te_trial_shuffle_surrs_14pps_20210214-202026.csv',sep=',')
names(X)
summary(X)
X$PP <- factor(X$PP)
X$Task <- factor(X$Task)
names(X)
boxplot(TEstim~Task,data=X)
boxplot(TEpp~Task,data=X)
boxplot(taustim~Task,data=X)
boxplot(taupp~Task,data=X)
boxplot(interactdelay12~Task,data=X)
boxplot(interactdelay21~Task,data=X)
boxplot(interactdelay12~Task,data=X)
m1=lmer(TEpp ~ 1 + (1|PP),data=x,REML=0)
m1=lmer(TEpp ~ 1 + (1|PP),data=X,REML=0)
m2=lmer(TEpp ~ 1 + Trial + (1|PP),data=X,REML=0)
m2=lmer(TEpp ~ 1 + trial + (1|PP),data=X,REML=0)
m3=lmer(TEpp ~ 1 + trial + Task + (1|PP),data=X,REML=0)
m4=lmer(TEpp ~ 1 + trial*Task + (1|PP),data=X,REML=0)
m5=lmer(TEpp ~ 1*trial*Task + (1|PP),data=X,REML=0)
anova(m1,m2,m3,m4,m5)
anova(m1,m2,m3,m4)
summary(m3)
source('~/mcmc/collective_intelligence/square/analysis_8/ranalysis/multiplot.R')
task_vec <- unique(X$Task)
library(ghibli)
library(ggplot2)
library(ghibli)
install.packages("ghibli")
colors<-ghibli_palette("PonyoMedium",7,type=("continuous"))[c(3,5,6)]
library(ghibli)
colors<-ghibli_palette("PonyoMedium",7,type=("continuous"))[c(3,5,6)]
colors[1]<-ghibli_palette("MarnieMedium2",7,type=("continuous"))[6]
colors[2]<-ghibli_palette("MononokeMedium",7,type=("continuous"))[5]
colors[3]<-ghibli_palette("YesterdayMedium",7,type=("continuous"))[6]
names(X)
g<-list('vector',4)
counter = 0
for (dv in c(6,7,24,25)){
X$dv<-X[,dv]
if (names(x)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(x)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(x)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(x)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(task))) +
geom_jitter(size=1, alpha=.2, width=.0, height=.0) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(task)), fun='mean', geom='line', size=2.2, alpha=1) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(task)), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000",size = 1, linetype = "solid")) +
theme(legend.position="top",legend.title=element_blank()) +
#scale_x_continuous(breaks=seq(0,limit_lags,1), limits=c(0,limit_lags)) +
#scale_y_continuous(limits=c(-.6,.4)) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
g<-list('vector',4)
counter = 0
for (dv in c(6,7,24,25)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(task))) +
geom_jitter(size=1, alpha=.2, width=.0, height=.0) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(task)), fun='mean', geom='line', size=2.2, alpha=1) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(task)), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000",size = 1, linetype = "solid")) +
theme(legend.position="top",legend.title=element_blank()) +
#scale_x_continuous(breaks=seq(0,limit_lags,1), limits=c(0,limit_lags)) +
#scale_y_continuous(limits=c(-.6,.4)) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
names(X)[dv]
names(X)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,24,25)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(task))) +
geom_jitter(size=1, alpha=.2, width=.0, height=.0) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(task)), fun='mean', geom='line', size=2.2, alpha=1) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(task)), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000",size = 1, linetype = "solid")) +
theme(legend.position="top",legend.title=element_blank()) +
#scale_x_continuous(breaks=seq(0,limit_lags,1), limits=c(0,limit_lags)) +
#scale_y_continuous(limits=c(-.6,.4)) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,24,25)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.2, width=.0, height=.0) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(Task)), fun='mean', geom='line', size=2.2, alpha=1) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(Task)), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000",size = 1, linetype = "solid")) +
theme(legend.position="top",legend.title=element_blank()) +
#scale_x_continuous(breaks=seq(0,limit_lags,1), limits=c(0,limit_lags)) +
#scale_y_continuous(limits=c(-.6,.4)) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
names(X)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.2, width=.0, height=.0) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(Task)), fun='mean', geom='line', size=2.2, alpha=1) +
stat_summary(aes(x=trial, y=dv, colour=as.factor(Task)), geom="ribbon", fun.data=mean_cl_boot, alpha=.5) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000",size = 1, linetype = "solid")) +
theme(legend.position="top",legend.title=element_blank()) +
#scale_x_continuous(breaks=seq(0,limit_lags,1), limits=c(0,limit_lags)) +
#scale_y_continuous(limits=c(-.6,.4)) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (-1+trial|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (-1+trial|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+task + (-1+trial|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*task + (-1+trial|PP),data=X,REML=0)
if (dv==2) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==3) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==4) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==5) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (-1+trial|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (-1+trial|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+Task + (-1+trial|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*Task + (-1+trial|PP),data=X,REML=0)
if (dv==2) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==3) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==4) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==5) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (1|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (1|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+Task + (1|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*Task + (1|PP),data=X,REML=0)
if (dv==2) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==3) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==4) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==5) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (1|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (1|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+Task + (1|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*Task + (1|PP),data=X,REML=0)
if (dv==2) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==3) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==4) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==5) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=Task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
counter
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (1|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (1|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+Task + (1|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*Task + (1|PP),data=X,REML=0)
if (dv==9) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==10) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==27) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
if (dv==28) {X$fitted <- getME(m3,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=Task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (1|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (1|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+Task + (1|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*Task + (1|PP),data=X,REML=0)
if (dv==9) {X$fitted <- getME(m4,'X') %*% fixef(m3)}
if (dv==10) {X$fitted <- getME(m4,'X') %*% fixef(m3)}
if (dv==27) {X$fitted <- getME(m4,'X') %*% fixef(m3)}
if (dv==28) {X$fitted <- getME(m4,'X') %*% fixef(m3)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=Task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
g<-list('vector',4)
counter = 0
for (dv in c(9,10,27,28)){
X$dv<-X[,dv]
if (names(X)[dv]=='TEstim') {dv_lab = 'TE stim->pp'}
if (names(X)[dv]=='TEpp') {dv_lab = 'TE pp->stim'}
if (names(X)[dv]=='surrprop12') {dv_lab = 'Surr Test 1->2 %'}
if (names(X)[dv]=='surrprop21') {dv_lab = 'Surr Test 2->1 %'}
m1=lmer(dv ~ 1 + (1|PP),data=X,REML=0)
m2=lmer(dv ~ 1 + trial + (1|PP),data=X,REML=0)
m3=lmer(dv ~ 1 + trial+Task + (1|PP),data=X,REML=0)
m4=lmer(dv ~ 1 + trial*Task + (1|PP),data=X,REML=0)
if (dv==9) {X$fitted <- getME(m4,'X') %*% fixef(m4)}
if (dv==10) {X$fitted <- getME(m4,'X') %*% fixef(m4)}
if (dv==27) {X$fitted <- getME(m4,'X') %*% fixef(m4)}
if (dv==28) {X$fitted <- getME(m4,'X') %*% fixef(m4)}
counter = counter + 1
g[[counter]] <- ggplot(data=X, aes(x=trial, y=dv, colour=as.factor(Task))) +
geom_jitter(size=1, alpha=.5, width=.0, height=.0) +
geom_line(aes(x=trial, y=fitted, colour=Task), size=1.2, alpha=.7) +
#geom_line(aes(x=trial, y=0), col='black', size=1.2, alpha=.7) +
theme_classic() +
theme(panel.background = element_rect(fill = "#111111",
colour = "#000000", size = 1, linetype = "solid")) +
theme(legend.position="top", legend.title=element_blank()) +
labs(y = dv_lab) +
labs(x = "Trial")
g[[counter]] <- g[[counter]] + scale_colour_manual(values=colors)
}
multiplot(plotlist=g,cols=4)
getwd()
filename=paste("te_scores_training",'_',Sys.Date(),'.png',sep='')
png(filename=filename,width=16,height=4,units="in",res=300)
multiplot(plotlist=g,cols=4)
dev.off()
